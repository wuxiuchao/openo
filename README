####################################################
# Prerequisite
####################################################
1. docker
2. postman (optional)
3. libjson-perl

####################################################
# Installation
####################################################
1. enter into "mercury_demo" directory
2. run: ./initialize_all.sh

####################################################
# Demonstration Steps
####################################################
1. start related docker containers.
    1.1 enter into "mercury_demo" directory
    1.2 run: ./study_lcm.sh
2. Start the simulated micro-services used by sdno-lcm
    2.1 enter into "mercury_demo" directory
    2.2 run: sudo docker rm -f i-sdnos-lcmsbis
    2.3 run: sudo docker run -t -i --name i-sdnos-lcmsbis --network openo-net --ip 172.18.5.2 -v /root/mercury_demo/filebeat/log:/service/log -e MSB_ADDR=172.18.0.2:80 --entrypoint bash openoint/simulate-sdno-services
    2.4 open another terminal in the host (EC2 instance) and enter into "mercury_demo" directory.
    2.5 run: sudo docker cp docker-entrypoint-simulator-with-same-logfile.sh i-sdnos-lcmsbis:/service
    2.6 switch to previous terminal (currently in the container for simulator)
    2.7 enter into "/service" and run: chmod +x docker-entrypoint-simulator-with-same-logfile.sh
    2.8 run: ./docker-entrypoint-simulator-with-same-logfile.sh
3. Start filebeat
    3.1 switch to or open a new terminal on the host (EC2 instance).
    3.2 enter into "mercury_demo" directory
    3.3 run: sudo docker rm -f i-filebeat
    3.4 run: sudo docker run -d --name i-filebeat --network openo-net --ip 172.18.5.3 -v /root/mercury_demo/filebeat/log:/var/log:ro -v /root/mercury_demo/filebeat/filebeat-config.yml:/root/config.yml logzio/logzio-filebeat
4. Upload CSAR
    4.1 enter into "mercury_demo/uploadCSAR" directory
    4.2 run: ./uploadCSAR.sh 172.18.0.2
    4.3 (Option) postman or curl (GET method) can be used to show the template uploaded to catalog.
        URL: http://172.18.0.2/openoapi/catalog/v1/servicetemplates
5. import inventory data to ESR & BRS
    5.1 enter into "mercury_demo/data-population" directory
    5.2 run: ./import_data_to_esr_brs.pl 172.18.0.2 172.18.0.1 Controllers.json Site.json ManagedElements.json
    5.3 (Optional) postman or curl (GET method) to show data in ESR & BRS
        ME URL: http://172.18.0.2/openoapi/sdnobrs/v1/managed-elements
        Site URL: http://172.18.0.2/openoapi/sdnobrs/v1/managed-elements
        Controller URL: http://172.18.0.2/openoapi/extsys/v1/sdncontrollers
                        http://172.18.0.2/openoapi/extsys/v1/vims
6. Create one Enterprise2DC service
    6.1 enter into "mercury_demo/creation-instantiation" directory
    6.2 run: ./create-ns.pl 172.18.0.2 Creation.json
    6.3 copy the "service instance id" printed out in the terminal.
7. Instantiate above Enterprise2DC service
    7.1 enter into "mercury_demo/creation-instantiation" directory
    7.2 run: ./instantiate-ns.pl 172.18.0.2   SERVICE_INSTANCE_ID_from5   Instantiation.json
8. Demonstrate the sequence of API calls through logz.io
    8.1 open a browser on your Laptop and go to website "logz.io".
    8.2 log in logz.io with your username and password.
    8.3 click "Kibana "in the top-left corner
    8.4 choose "Discovery" panel
    8.5 at the top-right corner, you can choose the period used to search and display log data
    8.6 show and explain apis called by sdno-lcm
